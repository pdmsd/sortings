------------------------------------------------------------------------------------------------------
-----------------------------------------------------SQL----------------------------------------------
------------------------------------------------------------------------------------------------------

-------------------------------1-------------------------------------
--------1.1--------

1--
select staff_name "Name",design_code "Designation Code"
from staff_master
where hiredate <= '01-JAN-2003' and
staff_sal between 12000 and 25000;

2--
select staff_code,staff_name,dept_code,((SYSDATE-hiredate)/365) "Experience"
from staff_master
where ((SYSDATE-hiredate)/365)>=18
order by 3;

3--
select * from staff_master
where mgr_code is null;

4--
select * from book_master
where book_pub_year between 2001 and 2004 or book_name like '%&%';

5--
select staff_name from staff_master
where staff_name like '%_%';




-------------------------------2-------------------------------------

--------2.1---------

1--
select staff_name,lpad(staff_sal,15,'$')
from staff_master;


2--
select student_name,to_char(studentdob,'month dd yyyy') as 
student_dob from studentmaster where to_char(studentdob,'day') 
like  ('%saturday%') or to_char(studentdob,'day') like  ('%sunday%') ;


3--
select staff_name,round(months_between(sysdate,hiredate)) as 
months_worked from staffmaster order by months_worked desc;


4--
select * from staffmaster where to_char(hiredate,'dd') 
between 1 and 15 and to_char(hiredate,'month') like '%december%' ;


5--
select staff_name,staff_sal,
	case 
	when staff_sal >=50000 then 'a'  
	when staff_sal  >25000 and  staff_sal<50000 then 'b' 
	when staff_sal  >10000 and  staff_sal<25000 then 'c' 
	else 'd' 
	end case
	from staffmaster;


6--
select staff_name,to_char(hiredate,'dd month yyyy') as 
hire_date,to_char(hiredate,'day')as day from staffmaster 
order by to_char(hiredate,'day') desc;


7--
select instr('mississippi','i',2,3) from dual;


8--
select to_char(next_day(sysdate,'tuesday'),'dd month ,yyyy') as 
day from dual where next_day(sysdate,'tuesday')<last_day(sysdate) ;


9--
select student_code,student_name,decode(dept_code,20,'electricals',30,'electronics','others') 
department_name from studentmaster;



---------2.2---------

1--
select max(staff_sal) "Maximum",min(staff_sal) "Minimum", sum(staff_sal) "Total", round(avg(staff_sal)) "Average"
from staff_master
group by dept_code;


2--
select dept_code,count(*) "Total Number of Managers"
from staff_master
group by dept_code;


3--
select dept_code,sum(staff_sal)
from staff_master
where not staff_code in ( select mgr_code from staff_master)
group by dept_code
having sum(staff_sal)>20000;




-------------------------------3-------------------------------------

1--
select s.staff_name,s.dept_code,d.dept_name,s.staff_sal
from staff_master s, department_master d
where s.dept_code=d.dept_code and staff_sal>20000;


2--
select s.staff_code "Staff#",s.staff_name "Staff",d.dept_name "Mgr#",s.mgr_code "Manager"
from staff_master s, department_master d, staff_master s1
where s.staff_code=s1.mgr_code and d.dept_code=s1.dept_code;


3--
select s.student_code,s.student_name,b.book_code,b.book_name
from student_master s,book_master b,book_transactions bt
where bt.book_expected_return_date = SYSDATE;


4--
select s.staff_code,s.staff_name,d.dept_name,dg.design_name,b.book_code,b.book_name,bt.book_issue_date
from staff_master s, department_master d,designation_master dg,book_transactions bt,book_master b
where d.dept_code=s.dept_code
and bt.book_code=b.book_code
and bt.book_issue_date between add_months(trunc(sysdate,'mm'),-1) and last_day(add_months(trunc(sysdate,'mm'),-1));


5--
select s.staff_code,s.staff_name,d.design_name,dt.dept_name,m.book_code,m.book_name,
((SYSDATE-bt.book_expected_return_date)*5) "Fine"
from staff_master s,book_master m,designation_master d,department_master dt, book_transactions bt
where s.staff_code=bt.staff_code and
bt.book_code=m.book_code and
d.design_code=s.design_code and
s.dept_code=dt.dept_code and
book_actual_return_date is null;




6--
select s.staff_code,s.staff_name,s.staff_sal
from staff_master s
where s.staff_sal < (select avg(staff_sal) from staff_master);


7--
select b.book_pub_author,b.book_name
from book_master b
group by b.book_pub_author,b.book_name
having count(*) > 1;


8--
select s.staff_code,s.staff_name,d.dept_name
from staff_master s,department_master d, book_transactions bt,book_master b
where s.dept_code=d.dept_code and s.staff_code=bt.staff_code and b.book_code=bt.book_code
having count(b.book_code)>1
group by s.staff_code,s.staff_name,d.dept_name;


9--
select s.student_code,s.student_name,d.dept_name 
from staffmaster s,department_master d 
group by s.dept_code having max(s.dept_code);


10--
select distinct s.staff_code,s.staff_name,d.dept_name,dg.design_name
from staff_master s,department_master d,designation_master dg
where s.dept_code=d.dept_code and s.design_code=dg.design_code and (SYSDATE-s.hiredate)<90;


11--
select a.staff_name,count(*)
from staff_master a,staff_master b
where a.staff_code=b.mgr_code
group by a.staff_name;


12--
select bt.book_code,b.book_name
from book_transactions bt,book_master b
where bt.book_code = b.book_code
and bt.book_actual_return_date is null
and bt.book_expected_return_date = 
(select next_day(sysdate-interval '7' day,'MONDAY') from dual);


13--
select d.dept_code,d.dept_name,count(*)
from department_master d,staff_master s
where d.dept_code=s.dept_code
group by d.dept_code,d.dept_name;




-------------------------------4-------------------------------------

1--
create table Customer(
CustomerId number(5),
Cust_Name varchar2(20),
Address1 varchar2(30),
Address2 varchar2(30));


2--
alter table Customer rename column Cust_Name TO CustomerName;
alter table Customer modify CustomerName not null;


3--
alter table Customer
add (Gender varchar2(1),
Age number(3),
PhoneNo number(10));
rename Customer to Cust_Table;


4--
insert into cust_table values(1001, 'George', '#116 France', '#116 France', 'M', 25, 434524);
insert into cust_table values(1002, 'Becker', '#114 New York', '#114 New York', 'M', 45, 431525);


5--
alter table cust_table
add constraint custid_prim primary key(customerid);


6--
ORA-00001:unique constraint (SYSTEM.CUSTID_PRIM) violated


7--
alter table cust_table drop constraint custid_prim;


8--
ORA-02437: cannot validate (SYSTEM.CUSTID_PRIM) - primary key violated


9--
Alter table cust_table drop PRIMARY KEY custid_prim;
Insert into cust_table(1002, Becker, #114 New York, #114 New york , M, 45,431525, 15000.50);
Insert into cust_table(1003, Nanapatekar, #115 India, #115 India , M, 45, 431525,20000.50);


10--
truncate table cust_table;


11--
alter table cust_table add e_mail varchar2(30);


12--
alter table cust_table drop column e_mail;


13--
create table suppliers as
select customerid "SuppId", cust_name "Sname",
address1 "Addr1", address2 "Addr2", phoneno "ContactNo"
from cust_table;


14--
drop table supplier;
create table customermaster(
customerid number(5) constraint custid_pk primary key,
customername varchar2(20) not null,
Address1 varchar2(30) not null,
Address2 varchar2(30),
gender varchar2(1),
age number(3),
phoneno number(10));


15--
create table accountsmaster(
customerid number(5),
accountnumber number(10,2) constraint acc_pk primary key,
accounttype char(3),
ledgerbalance number(10,2) not null);


16--
alter table accountsmaster add constraint cust_acc foreign key(customerid)
references customermaster(customerid);


17--
insert into customermaster values
(1000,'Allen','#115 Chicago','#115 Chicago','M',25,7878776);
insert into customermaster values
(1001,'George','#116 France','#116 France','M',25,434524);
insert into customermaster values
(1002,'Becker','#114 New York','#114 New York','M',45,431525);


18--
 alter table accountsmaster modify accounttype
 constraint chk1 check (accounttype != 'NRI' or accounttype!='IND');


19--
 alter table accountsmaster add
 constraint balance_check check (ledgerbalance>5000);


20--
Delete from Accountmaster,customertable where customerid = 1001


21--
create table accountdetails as select * from accountsmaster;


22--
create view acc_view as
select a.customerid "CustomerCode",c.customername "CustomerName",a.accountnumber "AccountNumber",a.accounttype "Type",a.ledgerbalance "Balance"
from accountsmaster a,cust_table c;


23--
create view vaccs_dtls as
select * from accountsmaster where accounttype='IND' and
ledgerbalance > 10000
with check option;


24--
create view accsvw10 as
select * from staff_master
with read only constraint rd_only;


25--
CREATE sequence SEQ_DEPT start with 40
increment by 10
maxvalue 200;


26--
create table departmentmaster(deptno number(50),Dname varchar2(25),location varchar2(25));
insert into departmentmaster  values(seq_dept.NEXTVAL,'MARKETING','NEW DELHI');
insert into departmentmaster  values(seq_dept.NEXTVAL,'SALES','chennai');
insert into departmentmaster  values(seq_dept.NEXTVAL,'RESEARCH','BOSTON');


27--
DROP sequence seq_dept;


28--
CREATE INDEX no_name on emp(empno);
select * from emp;


29--
create synonym synemp for emp;


30--
select * from synemp;

-------------------------------5-------------------------------------

5.1--
create table employee as select * from emp where 1=3;


5.2--
select * from employee;


5.3--
update employee
set job=(select job from employee where empno=7788),
deptno=(select deptno from employee where empno=7788)
where empno=7698;


5.4--
delete from employee where departmentname like '%sales%';


5.5--
update table employee 
set deptno=(select deptno from employee where deptno=7788) 
where deptno=7698;

5.6--
insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) 
values (1000,'Allen', 'Clerk',1001,'12-jan-01', 3000, 2,10);
insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) 
values (1001,'George', 'analyst', null, '08 Sep 92', 5000,0, 10);
insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) 
values (1002, 'Becker', 'Manager', 1000, '4 Nov 92', 2800,4, 20);
insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) 
values (1003, 'Bill', 'Clerk', 1002, '4 Nov 92',3000, 0, 20);


-------------------------------6-------------------------------------

1--
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) 
values (6000, 'John', '#115 Chicago', '#115 Chicago', 'M', 25, 7878776, 10000 );
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) 
values (6001, 'Jack', '#116 France', '#116 France', 'M', 25, 434524, 20000  );
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) 
values (6002, 'James', '#114 New York', '#114 New York', 'M', 45, 431525, 15000.50);


2--
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) 
values (6000, 'John', '#115 Chicago', '#115 Chicago', 'M', 25, 7878776, 10000 );
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) 
values (6001, 'Jack', '#116 France', '#116 France', 'M', 25, 434524, 20000  );
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) 
values (6002, 'James', '#114 New York', '#114 New York', 'M', 45, 431525, 15000.50);
savepoint p1;


3--
insert into customermaster (customerid,customername,address1,address2,gender,age,phoneno) 
values (6003, 'John', '#114 Chicago', '#114 Chicago', 'M', 45, 439525, 19000.60);


4--
rollback p1;




------------------------------------------------------------------------------------------------------
-----------------------------------------------------PL/SQL-------------------------------------------
------------------------------------------------------------------------------------------------------

-----------------------------1--------------------------------------

1--
Cannot initialize inside DECLARE block

2--
DECLARE --outer block
var_num1 NUMBER := 5;
BEGIN
DECLARE --inner block
var_num1 NUMBER := 10;
BEGIN
DBMS_OUTPUT.PUT_LINE('Value for var_num1:' ||var_num1);
END;
END;

3--
DECLARE
emp_detail employee%ROWTYPE;
BEGIN
select * into emp_detail from employee where empno=7369;
dbms_output.put_line(emp_detail.empno||' '||emp_detail.ename||' ' ||
emp_detail.job||' '||emp_detail.mgr||' '||emp_detail.hiredate||' '||emp_detail.sal||' '||emp_detail.comm||' '||emp_detail.deptno);
end;

4--
DECLARE
emp_detail employee%ROWTYPE;
dname department_master.dept_name%TYPE;
name employee.ename%TYPE;
BEGIN
name := '&name';
select * into emp_detail from employee where ename=name;
select dept_name into dname from department_master where dept_code = emp_detail.deptno;
dbms_output.put_line(emp_detail.empno||' '||emp_detail.ename||' ' ||
emp_detail.job||' '||emp_detail.mgr||' '||emp_detail.hiredate||' '||
 emp_detail.sal||' '||emp_detail.comm||' '||emp_detail.deptno||' '||dname);
END;


5--
DECLARE
dcode staff_master.staff_code%TYPE;
sal staff_master.staff_sal%TYPE;
hike staff_master.staff_sal%TYPE;
BEGIN
dcode := &dcode;
select staff_sal into sal from staff_master where dept_code = dcode;
hike := sal*0.3;
if hike>5000 
then
sal := sal+5000;
else
sal := sal+hike;
end if;
update staff_master set staff_sal = sal where dept_code = dcode;
end;


-----------------------------2--------------------------------------

1--
DECLARE
V_BONUS V_SAL%TYPE;
V_SAL STAFF_MASTER.STAFF_SAL%TYPE;
BEGIN
SELECT STAFF_SAL INTO V_SAL
FROM STAFF_MASTER
WHERE MGR_CODE=100006;
V_BONUS:=2*V_SAL;
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS ' || V_SAL);
DBMS_OUTPUT.PUT_LINE('STAFF BONUS IS ' || V_BONUS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('GIVEN CODE IS NOT VALID.ENTER VALID CODE');
END;

--V_BONUS declared before V_SAL
--TOO_MANY_ROWS exception missing


2--
DECLARE
V_SAL STAFF_MASTER.STAFF_SAL%TYPE;
V_BONUS V_SAL%TYPE;
BEGIN
SELECT STAFF_SAL INTO V_SAL
FROM STAFF_MASTER
WHERE MGR_CODE=100006;
V_BONUS:=2*V_SAL;
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS ' || V_SAL);
DBMS_OUTPUT.PUT_LINE('STAFF BONUS IS ' || V_BONUS);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('GIVEN CODE IS NOT VALID.ENTER VALID CODE');
WHEN TOO_MANY_ROWS THEN
DBMS_OUTPUT.PUT_LINE('TOO MANY ROWS RETURNED');
END;


3--
DECLARE
com employee.comm%TYPE;
eno employee.empno%TYPE;
cmm_excp EXCEPTION;
BEGIN
eno := &eno;
select comm into com from employee where empno=eno;
if com is null or com = 0 then
raise cmm_excp;
end if;
dbms_output.put_line('Commission is : '||com);
EXCEPTION
when NO_DATA_FOUND then
DBMS_OUTPUT.PUT_LINE('Commission does not exist');
when OTHERS then
DBMS_OUTPUT.PUT_LINE('Commission does not exist');
end;


-----------------------------3-------------------------------------

1--
create or replace function age(dt date)
return number
as
num number;
begin
select extract(year from dt) into num from dual;
return num;
end age;

declare
num number(4);
begin
num := age('04-AUG-1996');
dbms_output.put_line(num);
end;


2--**
create or replace procedure staff(scode in out number,name in out varchar2, dcode in out number, mname in out varchar2)
as
begin
select distinct a.staff_code,b.staff_name,a.dept_code,a.staff_name into
scode,name,dcode,mname 
from staff_master a,staff_master b
where a.staff_code=b.mgr_code;
end;




3--
create or replace function ctc(scode number)
return number
as
sal staff_master.staff_sal%TYPE;
yr number(4);
begin
select staff_sal into sal from staff_master;
select extract(year from hiredate) into yr from staff_master;
yr := extract(year from sysdate) - yr;
if yr>4 then
	sal := 0.15*sal + 0.2*sal + 0.08*sal + 0.3*sal;
elsif yr>=2 and yr<4 then 
	sal := 0.15*sal + 0.2*sal + 0.08*sal + 0.2*sal;
elsif yr >=1 and yr<2 then
	sal := 0.15*sal + 0.2*sal + 0.08*sal + 0.1*sal;
else 
	sal := 0.15*sal + 0.2*sal + 0.08*sal;
end if;
return sal;
end;


4--
create or replace procedure update_sal(scode in number)
as
sal staff_master.staff_sal%TYPE;
yr number(4);
begin
select extract(year from hiredate) into yr from staff_master where staff_code=scode;
yr := extract(year from sysdate) - yr;
if yr>5 then
	update staff_master set staff_sal =  staff_sal + 0.25*staff_sal where staff_code=scode;
elsif yr>2 and yr<=5 then
	update staff_master set staff_sal =  staff_sal + 0.20*staff_sal where staff_code=scode;
else
	sal:=0;
end if;
end;


5--
create or replace procedure bt_ins(bcode in number,code in number)
as
dor varchar2(30);
a_dor date;
stu_code number;
sff_code number;
len number;
begin
len:=length(code);
if len=6 then
select staff_code into sff_code from book_transactions where staff_code=code;
else
select student_code into stu_code from book_transactions where student_code=code;
end if;
select to_char(sysdate+10,'DAY') INTO dor FROM DUAL;
if(dor='SATURDAY') then
select (sysdate+12) INTO a_dor FROM DUAL;
elsif (dor='SUNDAY')then
select (sysdate+11) INTO a_dor FROM DUAL;
else
select (sysdate+10) INTO a_dor FROM DUAL;
end if;
if sff_code is null then
insert into book_transactions values(bcode,stu_code,null,sysdate,a_dor,null);
else
insert into book_transactions values(bcode,null,sff_code,sysdate,a_dor,null);
end if;
end;



















